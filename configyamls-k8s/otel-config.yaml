receivers:
  prometheus:
    config:
      scrape_configs:
exporters:
  logging:
    loglevel: debug
  otlp:
    endpoint: ${MW_TARGET}
processors:
  resource/prometheus:
    attributes:
    - action: insert
      key: is.prometheus
      value: "true"
  resource:
    attributes:
      - key: host.id
        from_attribute: host.name
        action: upsert
      - key: service.name
        value: prometheus-sidecar-integration
        action: insert
      - key: mw.account_key
        action: insert
        value: ${MW_API_KEY}

  resourcedetection:
    detectors: [ env, system, docker ]
    system:
      hostname_sources: ["os"]
    timeout: 2s
    override: false
  batch:
  batch/2:
    send_batch_size: 2000
    timeout: 10s

service:
    telemetry:
      logs:
        level: "fatal"
    pipelines:
      metrics/prometheus:
        receivers: [ prometheus ]
        processors: [ resourcedetection, resource, resource/prometheus, batch, batch/2]
        exporters: [ otlp ]
