name: Build Windows Installer Package

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release number for MW Agent for Windows'
        required: true

env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true

jobs:
  create_installer:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ 'ubuntu-20.04']

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.GHCR_TOKEN }}
        ssh-key: ${{ secrets.CHECK_AGENT_ACCESS }}
        submodules: 'recursive'

    - name: Install makensis
      run: sudo apt update && sudo apt install -y nsis nsis-pluginapi
      if: ${{ matrix.os == 'ubuntu-20.04' }}

    - name: Build MW Agent for Windows
      run: |
        GOOS=windows CGO_ENABLED=0 go build -o build/mw-windows-agent.exe cmd/host-agent/main.go
        makensis -DVERSION=${{ github.event.inputs.release_version }} scripts/package-windows/package-windows.nsi
       
    - name: Install jsign Tool For Microsoft Authenticode
      run: |
        wget https://github.com/ebourg/jsign/releases/download/5.0/jsign_5.0_all.deb
        sudo dpkg -i jsign_5.0_all.deb
       
    - name: Setup Code Signing Certificate
      run: | 
        echo "${{ secrets.SM_CLIENT_CERT_FILE_B64 }}" | base64 --decode > certificate_pkcs12.p12

    - name: Sign MW Agent Installer Package
      run: |
        jsign --storetype ${{ secrets.SM_CLIENT_CERT_STORE_TYPE }} --alias ${{ secrets.SM_CLIENT_CERT_ALIAS }} --tsaurl ${{ secrets.SM_TIMESTAMP_AUTHORITY_URL }} --storepass "${{ secrets.SM_API_KEY }}|./certificate_pkcs12.p12|${{ secrets.SM_CLIENT_CERT_PASSWORD }}"  scripts/package-windows/mw-windows-agent-${{ github.event.inputs.release_version }}-setup.exe
             
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: mw-windows-agent-${{ github.event.inputs.release_version }}-setup.exe
        path: scripts/package-windows/mw-windows-agent-${{ github.event.inputs.release_version }}-setup.exe
