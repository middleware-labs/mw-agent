name: Host Agent - DEB - APT

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release number for DEB + APT package'
        required: true

env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true

jobs:
  build:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        arch:
          - arm64
          - amd64

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.GHCR_TOKEN }}
        ssh-key: ${{ secrets.CHECK_AGENT_ACCESS }}
        submodules: 'recursive'

    - name: Set Architecture Variables
      run: |
        echo "::set-env name=BINARY_SOURCE::release/mw-agent"
        echo "::set-env name=RELEASE_VERSION::$(echo "${{ github.event.inputs.release_version }}" | tr -d '\n')"
        echo "::set-env name=CONTROL_FILE::control"
        echo "::set-env name=ARCH::${{ matrix.arch }}"
        echo "release-version"
        echo $RELEASE_VERSION

    # - uses: actions/cache@v3
    #   with:
    #     path: |
    #       ~/.cache/go-build
    #       ~/go/pkg/mod
    #     key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

    # Reference : https://www.debian.org/doc/debian-policy/ch-controlfields.html
    - name: Creating Required Folder Structure
      run: |
        mkdir -p example/apt-repo
        mkdir -p example/mw-agent_$RELEASE_VERSION-1_$ARCH/usr/bin
        mkdir -p example/mw-agent_$RELEASE_VERSION-1_$ARCH/DEBIAN
        mkdir -p controlsetup
        touch controlsetup/control

        cat << EOF > controlsetup/control
        Package: mw-agent
        Version: ${RELEASE_VERSION}
        Maintainer: middleware <dev@middleware.io>
        Depends: libc6
        Architecture: $ARCH
        Homepage: https://middleware.io
        Description: Middleware Agent
        EOF

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.20.0

    # Building with CGO_ENABLED=0 so that we can build static binary which is not dependent on any external libraries
    # Building with -ldflags="-s -w" to reduce the size of binary
    - name: Go Build
      run: |
        CGO_ENABLED=0 GOOS=linux GOARCH=${{ matrix.arch }} go build -ldflags="-s -w -X main.agentVersion=${RELEASE_VERSION}" -v -a -o $BINARY_SOURCE cmd/host-agent/main.go

    - name: Copying Code Binary into target location
      run: |
          cp $BINARY_SOURCE example/mw-agent_$RELEASE_VERSION-1_$ARCH/usr/bin/.

    - name: Creating Control File
      run: |
          cp controlsetup/$CONTROL_FILE example/mw-agent_$RELEASE_VERSION-1_$ARCH/DEBIAN/control

    - name: Add YAML Files
      run: |
          mkdir -p example/mw-agent_$RELEASE_VERSION-1_$ARCH/usr/bin/configyamls/all
          mkdir -p example/mw-agent_$RELEASE_VERSION-1_$ARCH/usr/bin/configyamls/nodocker
          cp configyamls/all/otel-config.yaml example/mw-agent_$RELEASE_VERSION-1_$ARCH/usr/bin/configyamls/all/
          cp configyamls/nodocker/otel-config.yaml example/mw-agent_$RELEASE_VERSION-1_$ARCH/usr/bin/configyamls/nodocker/
    
    - name: Creating DEB package
      run: |
          dpkg --build example/mw-agent_$RELEASE_VERSION-1_$ARCH
          dpkg-deb --info example/mw-agent_$RELEASE_VERSION-1_$ARCH.deb
          dpkg-deb --contents example/mw-agent_$RELEASE_VERSION-1_$ARCH.deb

    - name: Set up aptly
      run: |
        # Download aptly binary
        wget https://github.com/aptly-dev/aptly/releases/download/v1.5.0/aptly_1.5.0_linux_amd64.tar.gz
        tar -xzf aptly_1.5.0_linux_amd64.tar.gz
        chmod +x aptly_1.5.0_linux_amd64/aptly
         
        # Move aptly binary to a directory in PATH
        sudo mv aptly_1.5.0_linux_amd64/aptly /usr/local/bin/

    
    - name: Verify aptly version
      run: aptly version

    # Reference : https://www.aptly.info/doc/
    - name: Add DEB to MW APT Repo
      run: |
        sudo apt-get install -y gnupg
        git clone https://.:${{ secrets.GHCR_TOKEN }}@github.com/middleware-labs/apt.middleware.io.git
        gpg --import apt.middleware.io/gpg-keys/mw-agent-apt-private.key
        gpg --import apt.middleware.io/gpg-keys/mw-agent-apt-public.key
        
        APTLY_HOME=$(aptly config show | grep rootDir | cut -d '"' -f 4)
        echo "APTLY_HOME=$APTLY_HOME" >> $GITHUB_ENV

        cat ~/.aptly.conf

        echo $APTLY_HOME
        sudo mkdir -p $APTLY_HOME/public
        sudo mkdir -p $APTLY_HOME/db
        sudo mkdir -p $APTLY_HOME/pool
        sudo chmod 777 $APTLY_HOME
        sudo chmod 777 $APTLY_HOME/*
        ls -l apt.middleware.io
        cp -r apt.middleware.io/db/* $APTLY_HOME/db/
        cp -r apt.middleware.io/public/* $APTLY_HOME/public/
        cp -r apt.middleware.io/pool/* $APTLY_HOME/pool/
        aptly repo list
        aptly repo add mw-repo example/mw-agent_$RELEASE_VERSION-1_$ARCH.deb
        aptly repo list
        gpg --list-keys
        gpg --list-secret-keys
        

        ls -l $APTLY_HOME/pool
        aptly publish update -force-overwrite stable
        ls -l $APTLY_HOME/pool
        echo "sleep 5"
        sleep 5
        ls -l $APTLY_HOME/pool
        cp -r $APTLY_HOME/* apt.middleware.io

        cd apt.middleware.io
        git config --global user.email "keval@middleware.io"
        git config --global user.name "bhogayatakb"
        git add .
        git commit -m "apt.middleware.io updated"
        git push origin master

# distribution = stable, wheezy
# architectures = all, amd64, arm64
# component = main, contrib, non-free